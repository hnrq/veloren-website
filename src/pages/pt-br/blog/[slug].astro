---
import { render } from "astro:content";

type VelorenBlogpost = {
  title: string;
  isoDate: string;
  guid: string;
  link: string;
  content: string;
  enclosure: {
    url: string;
  };
};

export const getStaticPaths = async () => {
  const Parser = (await import("rss-parser")).default;
  const parser = new Parser<unknown, VelorenBlogpost>();
  const feed = await parser.parseURL(import.meta.env.VELOREN_RSS_URL);
  return feed.items.map((item) => ({
    params: { slug: item.guid.split("/").at(-2) },
    props: { blogpost: item },
  }));
};

const { blogpost } = Astro.props;
---

<h1>{blogpost.title}</h1>
<small>{new Date(blogpost.isoDate).toLocaleDateString()}</small>
<main set:html={blogpost.content} />

<style is:global>
  main {
    max-width: 800px;
    margin: auto;
  }

  .inline-image img {
    max-width: 100%;
    height: auto;
  }

  .inline-image video {
    max-width: 100%;
    height: auto;
  }
</style>
